////
/// @group Input Range
////

/// Gives styles to input range track using the variables defined in Settings.
/// @example scss - SCSS
///		input[type='range'] {
///			&::-webkit-slider-runnable-track {
///				@include input-range-track();
///			}
///		}
/// @example css - CSS Output
///		input[type='range']::-webkit-slider-runnable-track {
///			border: none;
///			height: .3rem;
///			background-color: #d2d6d9;
///			background: linear-gradient(#0d78aa, #0d78aa) no-repeat #d2d6d9;
///			background-size: 0% 100%;
///		}
@mixin input-range-track() {
	border: none;
	height: $input-range-track-height;
	background-color: $input-range-background;
	background: linear-gradient($input-range-background-fill, $input-range-background-fill) no-repeat $input-range-background;
	background-size: 0% 100%;
}

/// Gives styles to the input range thumb button using the variables defined in Settings.
/// @requires {mixin} border
/// @example scss - SCSS
///		input[type='range'] {
///			&::webkit-slider-thumb {
///				@include input-range-thumb();
///			}
///		}
/// @example css - CSS Output
///		input[type='range']::webkit-slider-thumb {
///			border-width: 1px;
///			border-style: solid;
///			border-color: #7c878e;
///			width: 1.8rem;
///			height: 1.8rem;
///			border-radius: 50%;
///			background: #f5f5f6;
///		}
@mixin input-range-thumb() {
	@include border(solid, $color-grey, 1px);
	@include transition-with-curve ($input-range-transition-curve, $input-range-transition-duration, transform);
	width: $input-range-thumb-size;
	height: $input-range-thumb-size;
	border-radius: $input-range-thumb-radius;
	background: $input-range-thumb-background;
}

/// Gives styles to the input range thumb button when range is active
/// @requires {mixin} border
@mixin input-range-thumb-active() {
	transform: scale(1.2);
}


/// Gives styles to the input range thumb button when range is focus
/// @requires {mixin} border
@mixin input-range-thumb-focus() {
	box-shadow: 0 0 $input-focus-outerglow-distance $input-focus-outerglow-color;
}


/// Radio buttons: positioning and size for inner elements.
/// @param {unit} size - Size of the element
/// @example scss - SCSS
///		.foo[type="radio"]:checked + label:after {
///			@include input-radio-center-element(24px);
///		}
/// @example css - CSS Output
///		.foo[type="radio"]:checked + label:after {
///			width: 0.5rem;
///			height: 0.5rem;
///			margin-top: -0.25rem;
///			margin-left: -0.25rem;
///		}
@mixin input-radio-center-element($size) {
	width: px-to-rem($size);
	height: px-to-rem($size);
	$inner-margin: $size / 2;
	margin-top: px-to-rem(- $inner-margin);
	margin-left: px-to-rem(- $inner-margin);
}
