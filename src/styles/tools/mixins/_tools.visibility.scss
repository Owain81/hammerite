////
/// @group accessibility
////

// !important is needed for some visibility classes
// scss-lint:disable ImportantRule

/// Makes an element visually hidden, but still accessible to keyboards and assistive devices.
/// @example scss - SCSS usage example:
///		.foo {
///			@include element-invisible;
///		}
/// @example css - CSS output:
///		.foo {
///			position: absolute !important;
///			width: 1px;
///			height: 1px;
///			overflow: hidden;
///			clip: rect(0, 0, 0, 0);
///		}
/// @link http://snook.ca/archives/html_and_css/hiding-content-for-accessibility Hiding Content for Accessibility
@mixin element-invisible {
	position: absolute !important;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
}

/// Reverses the CSS output created by the `element-invisible()` mixin.
/// @example scss - SCSS usage example:
///		.foo {
///			@include element-invisible-off;
///		}
/// @example css - CSS output:
///		.foo {
///			position: static !important;
///			height: auto;
///			width: auto;
///			overflow: visible;
///			clip: auto;
///		}

@mixin element-invisible-off {
	position: static !important;
	height: auto;
	width: auto;
	overflow: visible;
	clip: auto;
}
