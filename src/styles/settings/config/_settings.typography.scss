//
// UILibrary by unit4 UX Center
// v1.0
//
// The variable system is meant to lighten the load of changing the library. It should enable
// users to easily change the appearance of the product they are trying to create.
//
//
//

////
/// @group Typography
////

/// Default class for typography
/// @type string
$class-name-typography:	#{$class-prefix-h}-text !default;

/// The length unit in which to output vertical rhythm values.
/// Supported values: px, em, rem.
/// @type Number

$base-unit: 'rem' !default;

/// Font family sans serif
/// @type String
$font-family-sans-serif: "Helvetica Neue", Arial, sans-serif !default;

/// The font size set on the root html element.
/// @type Number
$font-base-size: 16px !default; // Sets the base font size

/// The base line height determines the basic unit of vertical rhythm.
/// @type Number
$base-line-height: 26px !default;

// The font sizes for h1-h6.

/// Font size h1
/// @type Number
$font-size-h1: 2.25 * $font-base-size !default;

/// Font size h2
/// @type Number
$font-size-h2: 1.875 * $font-base-size !default;

/// Font size h3
/// @type Number
$font-size-h3: 1.5 * $font-base-size !default;

/// Font size h4
/// @type Number
$font-size-h4: 1.125 * $font-base-size !default;

/// Font size h5
/// @type Number
$font-size-h5: 1 * $font-base-size !default;

/// Font size h6
/// @type Number
$font-size-h6: .875 * $font-base-size !default;

/// The amount lists and blockquotes are indented.
/// @type Number
$indent-amount: 40px !default;

/// The following variable controls whether normalize-scss will output
/// font-sizes, line-heights and block-level top/bottom margins that form a basic
/// vertical rhythm on the page, which differs from the original Normalize.css.
/// However, changing any of the variables above will cause
/// $normalize-vertical-rhythm to be automatically set to true.
/// @type Boolean
$normalize-vertical-rhythm: false !default;

/// Converts pixels into REMs based on the $font-base-size
/// @param {unit} value - Value to be converted from pixels to REMs
/// @return {unit} Value in rem units.
@function px-to-rem($value) {
	$rem: $value / $font-base-size;
	@return #{$rem}rem;
}
